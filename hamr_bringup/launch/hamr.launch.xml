<launch>
    <let name="urdf_path" 
        value="$(find-pkg-share hamr_description)/urdf/hamr.urdf.xacro" />
    <let name="gazebo_config_path"
        value="$(find-pkg-share hamr_bringup)/config/gazebo_bridge.yaml" />
    <let name="rviz_config_path" 
        value="$(find-pkg-share hamr_description)/rviz/urdf_config.rviz" />
    <let name="pid_config_path"
        value="$(find-pkg-share hamr_bringup)/config/hamr_pid_params.yaml" />

    <!-- To launch GZ -->
    <include file="$(find-pkg-share ros_gz_sim)/launch/gz_sim.launch.py">
        <!-- <arg name="gz_args" value="empty.sdf -r" /> -->
        <arg name="gz_args" value="$(find-pkg-share hamr_bringup)/worlds/empty_world.sdf -r" />
    </include>
    <!-- To spawn the robot in GZ from the URDF generated by this robot_description topic -->
    <node pkg="ros_gz_sim" exec="create" args="-topic robot_description" />


    <!-- We could include the rviz launch file defined in the package itself -->
    <!-- <include file="$(find-pkg-share hamr_description)/launch/display.launch.xml" /> -->
    <!-- BUT, to keep it clean: -->

    <!-- To launch the URDF Robot State Publisher -->
    <node pkg="robot_state_publisher" exec="robot_state_publisher">
        <param name= "robot_description" 
            value="$(command 'xacro $(var urdf_path)')" />
    </node> 

    <!-- To bridge ros and upload the config file to bridge topic by topic -->
    <node pkg="ros_gz_bridge" exec="parameter_bridge">
        <param name="config_file" value="$(var gazebo_config_path)" />
    </node>

    <!-- Launch Rviz with the configuration -->
    <node pkg="rviz2" exec="rviz2" output="screen"
          args="-d $(var rviz_config_path)" />

    <!-- <node pkg="joint_state_publisher_gui" exec="joint_state_publisher_gui" /> -->

    <!-- Launch HAMR Controller -->
    <node pkg="hamr_control" exec="hamr_controller" >
        <param from="$(var pid_config_path)" />
    </node>
    <node pkg="hamr_control" exec="hamr_odom_graph" />

</launch>